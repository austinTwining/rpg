package ca.twining.rpg.game.entity.mob;

import java.util.Random;

import ca.twining.rpg.game.Screen;
import ca.twining.rpg.game.entity.EntityId;
import ca.twining.rpg.game.graphics.Sprite;

public class PirateEnemy extends Mob{
	
	private int animation = 0;
	private boolean walking = false;
	
	private Random random = new Random();
	
	private int time = 0;
	private int xa = 1, ya = 0;
	
	public PirateEnemy(int x, int y){
		this.x = x;
		this.y = y;
		this.sprite = Sprite.pirate_enemy_forward_standing;
		this.health = 5;
		this.id = EntityId.Pirate;
	}
	
	public void update(){
		time++;
		if(animation < 1000) animation++;
		else animation = 0;
		
		//AI code goes here//
		
		if(time % 60 == 0){
			xa = random.nextInt(3);
		}
		/////////////////////
		
		if(xa != 0 || ya != 0){
			move(xa, ya);
			walking = true;
		}else{
			walking = false;
		}
	}
	
	public void draw(Screen screen){
		boolean flip = false;
		if(direction == 0){
			sprite = Sprite.pirate_enemy_back_standing;
			if(walking){
				if(animation % 20 > 10){
					sprite = Sprite.player_back_walking1;
				}else{
					sprite = Sprite.player_back_walking2;
				}
			}
		}
		if(direction == 1){
			sprite = Sprite.pirate_enemy_side_standing;
			if(walking){
				if(animation % 20 > 10){
					sprite = Sprite.player_side_walking1;
				}else{
					sprite = Sprite.player_side_walking2;
				}
			}
		}
		if(direction == 2) {
			sprite = Sprite.pirate_enemy_forward_standing;
			if(walking){
				if(animation % 20 > 10){
					sprite = Sprite.player_forward_walking1;
				}else{
					sprite = Sprite.player_forward_walking2;
				}
			}
		}
		if(direction == 3){
			flip = true;
			sprite = Sprite.pirate_enemy_side_standing;
			if(walking){
				if(animation % 20 > 10){
					sprite = Sprite.player_side_walking1;
				}else{
					sprite = Sprite.player_side_walking2;
				}
			}
		}
		
		screen.drawEnemy(x, y, sprite, flip, false);
	}

}
